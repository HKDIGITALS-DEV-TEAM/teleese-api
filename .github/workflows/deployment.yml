name: Deploy to VPS

on:
  push:
    branches:
      - main
      - uat

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Récupérer le code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2 : Installer Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      # Étape 3 : Installer les dépendances
      - name: Install dependencies
        run: npm install

      # Étape 4 : Lancer les tests
      - name: Run tests
        run: npm test

      # Étape 5 : Compiler le projet
      - name: Build project
        run: npm run build

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Récupérer le code
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add VPS to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        env:
          BRANCH: ${{ github.ref_name }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          PROJECT_DIR: "teleese-api"
        run: |
          ssh $VPS_USER@$VPS_HOST << EOF
          cd $PROJECT_DIR
          git pull origin $BRANCH

          if [ "${BRANCH}" = "main" ]; then
          docker-compose -f docker-compose.yml up -d --build
          elif [ "${BRANCH}" = "uat" ]; then
              docker-compose -f docker-compose-uat.yml up -d --build
          else
              echo "Branch ${BRANCH} not configured for deployment"
              exit 1
          fi
          EOF
